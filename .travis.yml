sudo: required

services:
  - docker

matrix:
  fast_finish: true
  include:
    - env: DOCK=1 PY=2 RUN=unit
      os: linux
      dist: trusty

    - env: DOCK=1 PY=3 RUN=unit
      os: linux
      dist: trusty

    - env: DOCK=1 PY=3 RUN=style
      os: linux
      dist: trusty

    - language: python
      python: 2.7
      env: RUN=unit
      os: linux
      dist: trusty

    - language: python
      python: 3.5
      env: RUN=unit COVERALLS=1
      os: linux
      dist: trusty

    - language: python
      python: 3.5
      env: RUN=pep8
      os: linux
      dist: trusty

    - language: generic
      env: RUN=unit PY=2
      os: osx

    - language: generic
      env: RUN=unit PY=3
      os: osx


before_install:
  # https://github.com/travis-ci/travis-ci/issues/6307
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then

      rvm get head;

    fi;


install:
  - if [ "${TRAVIS_OS_NAME}" == "linux" ] && [ -v DOCK ]; then
      if [ "$PY" == "2" ]; then
        docker build --tag plyer:py2 -f Dockerfile.trusty.py2 "$(pwd)";
      elif [ "$PY" == "3" ]; then
        docker build --tag plyer:py3 -f Dockerfile.trusty.py3 "$(pwd)";
        docker build --tag plyer:style -f Dockerfile.trusty.style "$(pwd)";
      fi;
    fi;

  - if [ "${TRAVIS_OS_NAME}" == "linux" ] && [ ! -v DOCK ]; then
      if [ "${RUN}" == "pep8" ]; then

        python -m pip install pycodestyle;

      fi;
      if [ "${RUN}" != "pep8" ]; then

        echo "[YML] Necessary build stuff";

        sudo add-apt-repository ppa:fkrull/deadsnakes -y;
        sudo apt-get update;
        sudo apt-get -y install --reinstall
            python-setuptools
            python-dev
            python3.5-dev;
        python -m pip install --upgrade nose coveralls;

        echo "[YML] plyer.notification deps";
        echo "[YML] * plyer.notification.NotifyDbus";
        sudo apt-get -y install python-dbus python3-dbus

        echo "[YML] * plyer.notification.NotifySendNotification";
        sudo apt-get -y install libnotify-bin;

        echo "[YML] * Fixing DBusException";
        echo "[YML] * org.freedesktop.DBus.Error.ServiceUnknown";
        echo "[YML] * The name org.freedesktop.Notifications was not provided";
        sudo apt-get -y install --reinstall notification-daemon notify-osd;

        echo "[YML] plyer.battery deps";
        sudo apt-get install upower;

      fi;
    fi;

  - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then

      ariagh=https://github.com/aria2/aria2/releases/download/release-1.29.0/;
      ariadmg=aria2-1.29.0-osx-darwin.dmg;
      pyftp=https://www.python.org/ftp/python/3.5.2/;
      py3pkg=python-3.5.2-macosx10.6.pkg;
      curl -O -L $ariagh$ariadmg;

      hdiutil attach aria2-1.29.0-osx-darwin.dmg;
      sudo installer -package "/Volumes/aria2 1.29.0 Intel/aria2.pkg" -target /;

      if [ "${PY}" == "3" ]; then

         curl -O -L $pyftp$py3pkg;
         sudo installer -package python-3.5.2-macosx10.6.pkg -target /;

         pip3 install --upgrade --user nose cython;
         pip3 install https://github.com/kivy/pyobjus/zipball/master;

      else
         pip install --upgrade --user nose cython;
         pip install https://github.com/kivy/pyobjus/zipball/master;

      fi;
    fi;


before_script:
  - if [ "${TRAVIS_OS_NAME}" == "linux" ] && [ "${RUN}" != "pep8" ] && [ ! -v DOCK ]; then

      export DISPLAY=:99.0;
      /sbin/start-stop-daemon
          --start
          --quiet
          --pidfile /tmp/custom_xvfb_99.pid
          --make-pidfile
          --background
          --exec /usr/bin/Xvfb --
              :99
              -screen 0 1280x720x24
              -ac +extension GLX;

      export PYTHONPATH=$PYTHONPATH:$(pwd);

    fi;


script:
  - if [ "${TRAVIS_OS_NAME}" == "linux" ] && [ -v DOCK ]; then
      if [ "$PY" == "2" ] && [ "$RUN" == "unit" ]; then
        docker run -it plyer:py2;
      elif [ "$PY" == "3" ] && [ "$RUN" == "unit" ]; then
        docker run -it plyer:py3;
      elif [ "$PY" == "3" ] && [ "$RUN" == "style" ]; then
        docker run -it plyer:style;
      fi;
    fi;

  # setup dummies before running tests
  # nose throws stuff to globals and won't clean up afterwards
  # test and remove dummies and return to previous state
  - if [ "${TRAVIS_OS_NAME}" == "linux" ] && [ ! -v DOCK ]; then

      python -m pip install .;
      python ./plyer/tests/dummy_setup.py;

      set -ex;
      if [ "${RUN}" == "unit" ]; then

        python -m nose.core -s ./plyer/tests --with-coverage;

      fi;
      if [ "${RUN}" == "pep8" ]; then

        pycodestyle "$(pwd)"
            --exclude=pep8.py,compat.py,utils.py
            --ignore=E402,W503;

      fi;
      if [ "${COVERALLS}" == "1" ] && [ "${TRAVIS_BRANCH}" == "master" ]; then

        coveralls;

      fi;

      python ./plyer/tests/dummy_teardown.py;
    fi;

  - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then

      python -m pip install .;
      python ./plyer/tests/dummy_setup.py;
      set -ex;
      if [ "${PY}" == "3" ]; then

        python3 -m nose.core ./plyer/tests;

      else
        python -m nose.core ./plyer/tests;

      fi;
      python ./plyer/tests/dummy_teardown.py;
    fi;

notifications:
  webhooks:
    urls:
      - https://kivy.org:5000/travisevent
    on_success: always
    on_failure: always
    on_start: always
